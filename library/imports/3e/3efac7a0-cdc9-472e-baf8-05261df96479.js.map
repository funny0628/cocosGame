{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","gameoverPrefab","onLoad","state","timer","starDuration","score","groundY","y","height","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","gainScore","string","gameOver","console","log","stopAllActions","overNode","parent","update","dt"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        gameoverPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n       \r\n    },\r\n    onLoad: function () {\r\n        this.state = false;\r\n         // 初始化计时器\r\n         this.timer = 0;\r\n         this.starDuration = 0;\r\n          // 初始化计分\r\n          this.score = 0;\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n    },\r\n\r\n    spawnNewStar: function() {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n\r\n        newStar.getComponent('Star').game = this;\r\n\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    //星星设置一个随机位置\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // 返回星星坐标\r\n        return cc.v2(randX, randY);\r\n    },\r\n    //获取分数\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n    },\r\n    //游戏结束逻辑\r\n    gameOver: function () {\r\n        console.log('jieshu-----');\r\n        \r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n        //游戏结束的时候创建出菜单的提示\r\n        let overNode = cc.instantiate(this.gameoverPrefab);\r\n        overNode.parent = this.node;\r\n        overNode.setPosition(60,-150);\r\n        return;\r\n    },\r\n\r\n    update: function (dt) {\r\n        console.log(this.timer,this.starDuration);\r\n        \r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration) {\r\n            this.state = true;\r\n\r\n           \r\n           \r\n        }\r\n        this.state ?  this.gameOver() :  this.timer += dt; \r\n       \r\n    },\r\n\r\n    \r\n});\r\n"]}